/*!
 * recursive-iterator v3.3.0
 * https://github.com/nervgh/recursive-iterator
 */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.RecursiveIterator=e():t.RecursiveIterator=e()}("undefined"!=typeof self?self:this,function(){return function(t){var e={};function o(r){if(e[r])return e[r].exports;var n=e[r]={i:r,l:!1,exports:{}};return t[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=t,o.c=e,o.d=function(t,e,r){o.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=0)}([function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),o.d(e,"RecursiveIterator",function(){return a});var r=o(1),n=(o.n(r),"__bypassMode"),i="__ignoreCircular",u="__maxDeep",s="__cache",f="__queue",p="__state",c={},a=function(){function t(t,e,o,r){void 0===e&&(e=0),void 0===o&&(o=!1),void 0===r&&(r=100),this[n]=e,this[i]=o,this[u]=r,this[s]=[],this[f]=[],this[p]=this.getState(void 0,t,null)}return t.prototype.next=function(){var t=this[p]||c,e=t.node,o=t.path,r=t.deep;if(this[u]>r&&this.isNode(e))if(this.isCircular(e)){if(!this[i])throw new Error("Circular reference")}else if(this.onStepInto(this[p])){var a=this.getStatesOfChildNodes(e,o,r),h=this[n]?"push":"unshift";(d=this[f])[h].apply(d,a),this[s].push(e)}var d,l=this[f].shift(),y=!l;return this[p]=l,y&&this.destroy(),{value:l,done:y}},t.prototype.destroy=function(){this[f].length=0,this[s].length=0,this[p]=null},t.prototype.isNode=function(t){return r(t)},t.prototype.isLeaf=function(t){return!this.isNode(t)},t.prototype.isCircular=function(t){return-1!==this[s].indexOf(t)},t.prototype.getStatesOfChildNodes=function(t,e,o){var r=this;return getKeys(t).map(function(n){return r.getState(t,t[n],n,e.concat(n),o+1)})},t.prototype.getState=function(t,e,o,r,n){return void 0===r&&(r=[]),void 0===n&&(n=0),{parent:t,node:e,key:o,path:r,deep:n}},t.prototype.onStepInto=function(t){return!0},t.prototype[Symbol.iterator]=function(){return this},t}()},function(t,e){t.exports=function(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}}])});
//# sourceMappingURL=recursive-iterator.min.js.map