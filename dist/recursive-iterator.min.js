/*
 recursive-iterator v1.2.2
 https://github.com/nervgh/recursive-iterator
*/
!function(a,b){"function"==typeof define&&define.amd?define("RecursiveIterator",[],function(){return a.RecursiveIterator=b()}):"object"==typeof exports?module.exports=b():a.RecursiveIterator=b()}(this,function(){"use strict";var a=function(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)},b=function(a,b,c){b&&Object.defineProperties(a,b),c&&Object.defineProperties(a.prototype,c)},c=function(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")},d="__bypassMode",e="__ignoreCircular",f="__maxDeep",g="__queue",h="__node",i="__cache",j=function(){function j(b){var k=void 0===arguments[1]?0:arguments[1],l=void 0===arguments[2]?!1:arguments[2],m=void 0===arguments[3]?100:arguments[3];c(this,j),this[d]=k,this[e]=l,this[f]=m,this[g]=[].concat(a(j.getChildNodes(b,[],0))),this[h]=j.getNode(),this[i]=[b],this.__makeIterable()}return b(j,{getKeys:{value:function(a){var b=Object.keys(a);return Array.isArray(a)||(b=j.isArrayLike(a)?b.filter(function(a){return Math.floor(Number(a))==a}):b.sort()),b},writable:!0,configurable:!0},isObject:{value:function(a){return a instanceof Object},writable:!0,configurable:!0},isWindow:{value:function(a){return a===a.window},writable:!0,configurable:!0},isArrayLike:{value:function(a){return!j.isWindow(a)&&a.hasOwnProperty("length")},writable:!0,configurable:!0},getChildNodes:{value:function(a,b,c){return j.getKeys(a).map(function(d){return j.getNode(a,a[d],d,b.concat(d),c+1)})},writable:!0,configurable:!0},getNode:{value:function(a,b,c){var d=void 0===arguments[3]?[]:arguments[3],e=void 0===arguments[4]?0:arguments[4];return{parent:a,node:b,key:c,path:d,deep:e}},writable:!0,configurable:!0}},{next:{value:function(){var b=this[h]||{},c=b.parent,k=b.node,l=b.key,m=b.path,n=b.deep;if(this[f]>n&&j.isObject(k))if(this.isCircular(k)){if(!this[e])throw new Error("Circular reference")}else if(this.onStepInto(c,k,l,m,n)){var o=j.getChildNodes(k,m,n);if(this[d]){var p;(p=this[g]).push.apply(p,a(o))}else{var q;(q=this[g]).unshift.apply(q,a(o))}this[i].push(k)}var r=this[g].shift(),s=!r;return this[h]=r,s&&this.destroy(),{value:r,done:s}},writable:!0,configurable:!0},destroy:{value:function(){this[g].length=0,this[i].length=0,this[h]=null},writable:!0,configurable:!0},isLeaf:{value:function(a){if(!j.isObject(a))return!0;var b=j.getKeys(a);return!b.length},writable:!0,configurable:!0},isCircular:{value:function(a){return-1!==this[i].indexOf(a)},writable:!0,configurable:!0},onStepInto:{value:function(){return!0},writable:!0,configurable:!0},__makeIterable:{value:function(){var a=this;try{this[Symbol.iterator]=function(){return a}}catch(b){}},writable:!0,configurable:!0}}),j}(),k=j;return k});